
1.1 การตั้งชื่อไฟล์และคลาส
เกี่ยวกับชื่อไฟล์ Controller, Model และ View รวมทั้งชื่อคลาสของ Controller และ Model
1.1.1 การตั้งชื่อไฟล์และคลาสของ Controller
หลักการตั้งชื่อไฟล์และคลาส
1) ตั้งชื่อไฟล์ต้องขึ้นต้นด้วยตัวอักษรพิมพ์ใหญ่ ถ้ามากกว่า 1 คํา ให้ตัวอักษรแรก
ของแต่ละคําต้องเป็นพิมพ์ใหญ่ และลงท้ายด้วยคําว่า Controller เช่น WorkRequestController.php
2) การตั้งชื่อคลาสต้องเป็นชื่อเดียวกันกับชื่อไฟล์และขึ้นต้นด้วยตัวอักษรพิมพ์ใหญ่
เหมือนกัน เช่น WorkRequestController
1.1.2 การตั้งชื่อไฟล์และคลาสของ Model
ตั้งชื่อไฟล์ต้องขึ้นต้นด้วยอักษรพิมพ์ใหญ่ ถ้ามากกว่า 1 คํา ให้ตัวอักษรแรกของแต่ละคํา

เป็นพิมพ์ใหญ่ เช่น Department.php
1.1.3 การตั้งชื่อไฟล์ View
หลักการตั้งชื่อไฟล์
ตั้งชื่อไฟล์view ด้วยตัวอักษรพิมพ์เล็กเท่านั้น และคั่นคําด้วยเครื่องหมายขีดล่าง (_)

เช่น subtask_detail.blade.php
1.2 การตั้งชื่อฟังก์ชัน
เกี่ยวกับฟังก์ชันของ Controller และ Model
1.2.1 การตั้งชื่อฟังก์ชัน Controller
หลักการตั้งชื่อฟังก์ชัน
1) ตั้งชื่อฟังก์ชันด้วยตัวอักษรพิมพ์เล็กเป็นตัวขึ้นต้นของทุกคําเสมอ คําถัดไป
ใช้ตัวอักษรพิมพ์ใหญ่เป็นตัวขึ้นต้น เช่น addDepartment() และ addEmployee() เป็นต้น

หมวดของฟังก์ชัน
2) ฟังก์ชันสําหรับแสดงหน้าจอการบันทึกข้อมูล หรือแก้ไขข้อมูล
(1) ฟังก์ชันการบันทึกข้อมูล ตั้งชื่อขึ้นต้นด้วย create คําถัดไปใช้ตัวอักษรพิมพ์ใหญ่

เป็นตัวขึ้นต้น เช่น createSubtaskForm() เป็นต้น

(2) ฟังก์ชันการแก้ไขข้อมูล ตั้งชื่อขึ้นต้นด้วย update คําถัดไปใช้ตัวอักษรพิมพ์ใหญ่

เป็นคําขึ้นต้น เช่น updateStatusForm() เป็นต้น

3) ฟังก์ชันสําหรับการบันทึก หรือแก้ไขลงฐานข้อมูล
(1) ฟังก์ชันสําหรับการบันทึก หรือเพิ่มข้อมูล ตั้งชื่อขึ้นต้นด้วย create คําถัดไป

ใช้ตัวอักษรพิมพ์ใหญ่เป็นตัวขึ้นต้น เช่น createSubtask()

(2) ฟังก์ชันสําหรับการแก้ไขข้อมูล ตั้งชื่อขึ้นต้นด้วย update คําถัดไปใช้ตัวอักษรพิมพ์

ใหญ่เป็นตัวขึ้นต้น เช่น updateStatus() เป็นต้น

4) ฟังก์ชันสําหรับการลบข้อมูลในฐานข้อมูลตั้งชื่อขึ้นต้นด้วย delete คําถัดไป

ใช้ตัวอักษรพิมพ์ใหญ่เป็นตัวขึ้นต้น เช่น deleteDepartment() เป็นต้น

5) ฟังก์ชันสําหรับการแสดงข้อมูล ตั้งชื่อขึ้นต้นด้วย show คําถัดไปใช้ตัวอักษรพิมพ์ใหญ่
เป็นตัวขึ้นต้น เช่น showListSubtask() เป็นต้น

6) ฟังก์ชันสําหรับการนําเข้าข้อมูล ตั้งชื่อขึ้นต้นด้วย import คําถัดไปใช้ตัวอักษรพิมพ์ใหญ่

เป็นตัวขึ้นต้น เช่น importImage() เป็นต้น

7) ฟังก์ชันอื่น ๆ ตั้งชื่อให้สอดคล้องกับการทํางาน เช่น editDepartment() หรือ logout()

เป็นต้น
1.2.2 การตั้งชื่อฟังก์ชัน Model
หลักการตั้งชื่อฟังก์ชัน
1) ตั้งชื่อฟังก์ชันด้วยตัวอักษรพิมพ์เล็กเป็นตัวขึ้นต้นของทุกคําเสมอ คําถัดไป

ใช้ตัวอักษรพิมพ์ใหญ่เป็นตัวขึ้นต้น เช่น getAllEmployees() เป็นต้น

2) ฟังก์ชันสําหรับเลือกข้อมูลทั้งหมด ตั้งชื่อขึ้นต้นด้วย getAll คําถัดไปใช้ตัวอักษรพิมพ์ใหญ่
เป็นคําขึ้นต้น เช่น getAllSubtask

3) ฟังก์ชันสําหรับเลือกข้อมูลบางส่วน ตั้งชื่อขึ้นต้นด้วย get คําถัดไปใช้ตัวอักษรพิมพ์ใหญ่

เป็นคําขึ้นต้น เช่น getSubtaskById เป็นต้น

4) ฟังก์ชันอื่น ๆ ตั้งชื่อให้สอดคล้องกับการทํางาน เช่น filterResult()

1.3 การตั้งชื่อตัวแปร
1.3.1 ตัวแปรทั่วไป หรือ Array
1) ให้ตั้งชื่อตัวแปรด้วยรูปแบบ Snake Case
2) ใช้ชื่อตัวแปรให้สอดกับข้อมูล เช่น $item และ $item_id เป็นต้น
1.3.2 ตัวแปรนับรอบของลูป
1) ตัวแปร $i เพื่อนับบรรทัดของลูป
2) ใช้ตัวแปร $i, $j และ $k หรือ $x, $y และ $z ร่วมกัน กรณีมีลูปมากกว่า 1 ลูป

ได้ตามความเหมาะสม
1.4 การจัดทํามาตรฐานเกี่ยวกับฐานข้อมูล
1.4.1 การตั้งชื่อฐานข้อมูล
ให้ตั้งชื่อฐานข้อมูลเป็นอักษรพิมพ์เล็กทั้งหมดตามด้วยเครื่องหมายขีดล่าง (_) ตัวอย่างเช่น
work_request_system เป็นต้น
1.4.2 การตั้งชื่อตาราง
ให้ตั้งชื่อตารางโดยใช้ชื่อข้อมูลแบบเป็นพหูพจน์หรือคํานามที่แสดงถึงสิ่งที่มีจํานวน
ตั้งแต่สองหน่วยขึ้นไป ตัวอย่างเช่น admins และ employees เป็นต้น
1.4.3 การตั้งชื่อฟิลด์
ให้ตั้งชื่อฟิลด์โดยตัวอักษรภาษาอังกฤษพิมพ์เล็กทั้งหมดเป็นชื่อของข้อมูลคําถัดไป
คั่นด้วยเครื่องหมายขีดล่าง (_) ตัวอย่างเช่น emp_id emp_name และ emp_email เป็นต้น
1.4.4 การเขียนคอมเมนต์ (Comment) ของตารางและฟิลด์
ทุกตารางและทุกฟิลด์ต้องมีการคอมเมนต์ หรือนิยามความหมายกํากับไว้ให้ครบถ้วน

ไม่มีข้อยกเว้น

หลักการเขียนคอมเมนต์
1) ตารางให้นิยามความหมายว่า ตารางเก็บข้อมูลใด หรือใช้สําหรับทําสิ่งใดตัวอย่างเช่น

ตาราง wrs_employees คือ ตารางเก็บข้อมูลของพนักงาน
2) ฟิลด์ ให้นิยามความหมายว่าใช้เก็บข้อมูลใด ตัวอย่างเช่น
- adm_id คือ รหัสผู้ดูแลระบบ
- adm_name คือ ชื่อผู้ดูแลระบบ
- adm_email คือ อีเมลผู้ดูแลระบบ

3) การระบุตัวอย่างของข้อมูลหากฟิลด์นั้นมีตัวอย่างของข้อมูลชัดเจนให้ใส่ต่อท้าย
ในเครื่องหมายวงเล็บด้วย ตัวอย่างเช่น tsk_priority คือ ระดับความสําคัญของใบสั่งงานย่อย
(H = สูง M = กลาง L = ต่ํา)

4) ฟิลด์ที่อ้างอิงจากฟิลด์อื่น (FK) ให้อธิบายความหมายเดียวกันกับตารางตั้งต้น (PK)
และต่อท้ายด้วยว่ามาจากตารางใด หรือฐานข้อมูลใด (ระบุชื่อฐานข้อมูลด้วย หากอยู่คนละฐานข้อมูล)
ตัวอย่างเช่น req_emp_id คือ รหัสพนักงาน (ตาราง wrs_employees )
1.5 การเขียนคอมเมนต์
1.5.1 คอมเมนต์คลาสของ Controller และ Model
ในคลาสของ Controller และ Model ให้เขียนคอมเมนต์รูปแบบเดียวกัน
ข้อบังคับ
1) ให้เขียนคอมเมนต์ทุกไฟล์ ไม่มีข้อยกเว้น
2) ให้เขียนคอมเมนต์ฟังก์ชันกํากับทุกฟังก์ชัน ไม่มีข้อยกเว้น
3) เขียนคอมเมนต์คลาสไว้บรรทัดแรกของไฟล์
4) เขียนคอมเมนต์คลาสด้วยภาษาอังกฤษ หรือภาษาไทยเท่านั้น
หลักการเขียนคอมเมนต์ส่วนของ Class
5) บรรทัดที่ 1 ใช้เครื่องหมายเปิดคอมเมนต์ คือ /*
6) บรรทัดที่ 2 ระบุชื่อคลาส เช่น Login
7) บรรทัดที่ 3 ระบุชื่อคลาสและข้อความเกี่ยวกับการทํางานคร่าว ๆ เช่น Member

Details of Member

8) บรรทัดที่ 4 ระบุชื่อและรหัสนิสิตผู้สร้างไฟล์คลาสหลังหัวข้อ @author เช่น @author

: Natthanan Sirisurayut 66160352

9) บรรทัดที่ 5 ระบุวันที่สร้างไฟล์คลาสหลังหัวข้อ @Create Date เช่น @Create Date

: 2025-02-09

10) บรรทัดที่ 6 ใช้เครื่องหมายปิดคอมเมนต์ คือ */
หมายเหตุ
แต่ละบรรทัดให้ใส่เครื่องหมาย * และเว้นวรรค 1 ครั้ง ก่อนเขียนข้อความเสมอ
(ยกเว้นบรรทัดที่ 1 และบรรทัดที่ 6)
ตัวอย่างการคอมเมนต์คลาส
/*
* Member

* Member Details of Member
* @author : Natthanan Sirisurayut 66160352
* @Create Date : 2025-02-09
*/
1.5.2 คอมเมนต์ฟังก์ชันใน Controller, Model Helper และ View
ในฟังก์ชันของ Controller, ModelHelper และ View (ส่วนที่เป็น JavaScript)
ให้เขียนคอมเมนต์รูปแบบเดียวกัน
ข้อบังคับ
1) เขียนคอมเมนต์กํากับทุกฟังก์ชัน ไม่มีข้อยกเว้น
2) เขียนคอมเมนต์ฟังก์ชันไว้ด้านบน ก่อนประกาศฟังก์ชันนั้น ๆ
3) เขียนคอมเมนต์ฟังก์ชันด้วยภาษาอังกฤษ หรือภาษาไทยเท่านั้น
หลักการเขียนคอมเมนต์ส่วนของฟังก์ชัน
4) บรรทัดที่ 1 ใช้เครื่องหมายเปิดคอมเมนต์ คือ /*
5) บรรทัดที่ 2 ระบุฟังก์ชัน เช่น check_email_admin()
6) บรรทัดที่ 3 ระบุชื่อข้อความเกี่ยวกับการทํางานคร่าว ๆ เช่น check email in

database

7) บรรทัดที่ 4 ระบุข้อมูลที่ระบบต้องรับเข้ามาหลังหัวข้อ @input เช่น @input :

user_email

8) บรรทัดที่ 5 ระบุข้อมูลที่ระบบแสดง หรือข้อมูลส่งออกมา หลังหัวข้อ @output

เช่น @output : user_email

9) บรรทัดที่ 6 ระบุชื่อของผู้สร้างไฟล์คลาสหลังหัวข้อ @author เช่น @author :

Natthanan Sirisurayut

10) บรรทัดที่ 7 ระบุวันที่สร้างไฟล์คลาสหลังหัวข้อ @Create Date เช่น @Create Date

: 2025-07-09

11) บรรทัดที่ 8 ใช้เครื่องหมายปิดคอมเมนต์ คือ */
12) แต่ละบรรทัดให้ใส่เครื่องหมาย * และเว้นวรรค 1 ครั้ง ก่อนเขียนข้อความเสมอ

(ยกเว้นบรรทัดที่ 1 และบรรทัดที่ 8)

13) กรณีไม่มีข้อมูลรับเข้า หรือส่งออกให้ใส่เครื่องหมายขีด (-)

ตัวอย่างการคอมเมนต์ส่วนของฟังก์ชัน
/*
* check_email_admin()
* check_email_in_database
* @input : user_email
* @output : user_email
* @author : Natthanan Sirisurayut 66160352
* @Create Date : 2025-02-09
*/
1.5.3 คอมเมนต์ส่วนของ View
ข้อบังคับ
1) ให้เขียนคอมเมนต์ทุกไฟล์ View ไม่มีข้อยกเว้น
2) หากมีฟังก์ชันในส่วนของ View ต้องเขียนคอมเมนต์ฟังก์ชันกํากับทุกฟังก์ชัน

ไม่มีข้อยกเว้น

3) เขียนคอมเมนต์ส่วนของ View ไว้บรรทัดแรกของไฟล์
4) เขียนคอมเมนต์ส่วนของ View ด้วยภาษาอังกฤษ หรือภาษาไทยเท่านั้น
หลักการเขียนคอมเมนต์ส่วนของ View
5) บรรทัดที่ 1 ใช้เครื่องหมายเปิดคอมเมนต์ คือ /*
6) บรรทัดที่ 2 ระบุชื่อไฟล์View เช่น create_subtask.blade.php
7) บรรทัดที่ 3 ระบุชื่อข้อความเกี่ยวกับการทํางานคร่าว ๆ เช่น Display form create

subtask by employee

8) บรรทัดที่ 4 ระบุข้อมูลที่ระบบต้องรับเข้ามาหลังหัวข้อ @input เช่น @input :

st_name st_description st_due_date st_priority และ st_assignee

9) บรรทัดที่ 5 ระบุข้อมูลที่ระบบแสดง หรือข้อมูลส่งออกมา หลังหัวข้อ @output เช่น

@output : form create subtak

10) บรรทัดที่ 6 ระบุชื่อผู้สร้างไฟล์คลาสหลังหัวข้อ @author เช่น @author :

Natthanan Sirisurayut 66160352

11) บรรทัดที่ 7 ระบุวันที่สร้างไฟล์คลาสหลังหัวข้อ @Create Date เช่น @Create Date

: 2025-02-09

12) บรรทัดที่ 8 ใช้เครื่องหมายปิดคอมเมนต์ คือ */หมายเหตุ

13) แต่ละบรรทัดให้ใส่เครื่องหมาย * และเว้นวรรค 1 ครั้ง ก่อนเขียนข้อความเสมอ

(ยกเว้นบรรทัดที่ 1 และบรรทัดที่ 8)

14) กรณีไม่มีข้อมูลรับ หรือส่งออกเข้าให้ใส่เครื่องหมายขีด (-)
ตัวอย่างการคอมเมนต์ส่วนของ View
{{--
* create_subtask.blade.php
* Display form create subtask by employee
* @input : st_name st_description st_due_date st_priority และ st_assignee
* @output : form create subtask
* @author : Natthanan Sirisurayut 66160352
* @Create Date : 2025-02-09
--}}
